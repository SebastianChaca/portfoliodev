---
import GitHub from "./icons/GitHub.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Typescript from "./icons/Typescript.astro";
import React from "./icons/React.astro";
import Redux from "./icons/Redux.astro";
import socket from "./icons/Socker.astro";
import Nest from "./icons/Nestjs.astro";
import Mongo from "./icons/Mongo.astro";
import Chakra from "./icons/Chakra.astro";
const TAGS = {
  TYPESCRIPT: {
    name: "Typescript",
    class: "bg-[#003159] text-white",
    icon: Typescript,
  },
  React: {
    name: "React",
    class: "bg-[#003159] text-white",
    icon: React,
  },
  CHAKRA: {
    name: "Chakra UI",
    class: "bg-[#003159] text-white",
    icon: Chakra,
  },
  REDUX: {
    name: "Redux toolkit",
    class: "bg-[#003159] text-white",
    icon: Redux,
  },
  NEST: {
    name: "Nest js",
    class: "bg-[#003159] text-white",
    icon: Nest,
  },
  MONGODB: {
    name: "Mongo DB",
    class: "bg-[#003159] text-white",
    icon: Mongo,
  },
  SOCKET: {
    name: "Socket io",
    class: "bg-[#003159] text-white",
    icon: socket,
  },
};
const PROJECTS = [
  {
    title: "What's app Web Clone",
    description:
      "App de mensajer√≠a en tiempo real inspirada en What's app web.",
    link: "https://wsp-web-app-production.up.railway.app/session/signin",
    github: "https://github.com/SebastianChaca/wsp-web-app",
    image: "/projects/wsp.webp",
    tags: [TAGS.TYPESCRIPT, TAGS.React, TAGS.REDUX, TAGS.CHAKRA],
  },
  {
    title: "What's app Web Clone API",
    description: "API REST de whats app web clone.",
    link: "https://wsp-web-api-production.up.railway.app/api",
    github: "https://github.com/SebastianChaca/wsp-web-api",
    image: "/projects/api.webp",
    tags: [TAGS.NEST, TAGS.MONGODB, TAGS.SOCKET, TAGS.TYPESCRIPT],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="wsp web"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2 flex-wrap">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 items-center mt-2`}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
